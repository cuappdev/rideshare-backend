openapi: 3.0.3
info:
  title: Scooped API
  version: 0.0.0
paths:
  /api/authenticate/:
    post:
      operationId: api_authenticate_create
      description: Authenticate the current user.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authenticate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Authenticate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Authenticate'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticate'
          description: ''
  /api/dev/:
    get:
      operationId: api_dev_retrieve
      description: Get all users.
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticate'
          description: ''
    post:
      operationId: api_dev_create
      description: Create test user or return access token for test user if `id` is
        provided.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authenticate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Authenticate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Authenticate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticate'
          description: ''
  /api/devices/:
    get:
      operationId: api_devices_list
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FCMDevice'
          description: ''
    post:
      operationId: api_devices_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FCMDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FCMDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FCMDevice'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FCMDevice'
          description: ''
  /api/devices/{registration_id}/:
    get:
      operationId: api_devices_retrieve
      parameters:
      - in: path
        name: registration_id
        schema:
          type: string
          title: Registration token
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FCMDevice'
          description: ''
    put:
      operationId: api_devices_update
      parameters:
      - in: path
        name: registration_id
        schema:
          type: string
          title: Registration token
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FCMDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FCMDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FCMDevice'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FCMDevice'
          description: ''
    patch:
      operationId: api_devices_partial_update
      parameters:
      - in: path
        name: registration_id
        schema:
          type: string
          title: Registration token
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFCMDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFCMDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFCMDevice'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FCMDevice'
          description: ''
    delete:
      operationId: api_devices_destroy
      parameters:
      - in: path
        name: registration_id
        schema:
          type: string
          title: Registration token
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/me/:
    get:
      operationId: api_me_retrieve
      description: Get current authenticated user.
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_me_create
      description: Update current authenticated user.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/prompts/:
    get:
      operationId: api_prompts_retrieve
      description: Get all prompts.
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
          description: ''
    post:
      operationId: api_prompts_create
      description: Create a prompt.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prompt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Prompt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Prompt'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
          description: ''
  /api/prompts/{id}/:
    get:
      operationId: api_prompts_retrieve_2
      description: Get prompt by id.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
          description: ''
    post:
      operationId: api_prompts_create_2
      description: Update prompt by id.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prompt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Prompt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Prompt'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
          description: ''
    delete:
      operationId: api_prompts_destroy
      description: Delete prompt by id.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/requests/:
    get:
      operationId: api_requests_retrieve
      description: Get all of a user's active requests.
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
    post:
      operationId: api_requests_create
      description: Create a request.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
  /api/requests/{id}/:
    post:
      operationId: api_requests_create_2
      description: Update a request.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
  /api/rides/:
    get:
      operationId: api_rides_retrieve
      description: Get all rides.
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
          description: ''
    post:
      operationId: api_rides_create
      description: Create a ride.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ride'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ride'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ride'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
          description: ''
  /api/rides/{id}/:
    get:
      operationId: api_rides_retrieve_2
      description: Get ride by id.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
          description: ''
    post:
      operationId: api_rides_create_2
      description: Update ride by id
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ride'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ride'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ride'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
          description: ''
  /api/search/:
    post:
      operationId: api_search_create
      description: Search for a ride.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ride'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ride'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ride'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
          description: ''
  /api/users/{id}/message/:
    post:
      operationId: api_users_message_create
      description: Send push notification to user by user id.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    Authenticate:
      type: object
      properties:
        access_token:
          type: string
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
      required:
      - access_token
      - first_name
      - last_name
      - username
    FCMDevice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
        registration_id:
          type: string
          title: Registration token
        device_id:
          type: string
          nullable: true
          description: Unique device identifier
          maxLength: 255
        active:
          type: boolean
          default: true
          title: Is active
          description: Inactive devices will not be sent notifications
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Creation date
        type:
          $ref: '#/components/schemas/FCMDeviceTypeEnum'
      required:
      - date_created
      - id
      - registration_id
      - type
    FCMDeviceTypeEnum:
      enum:
      - ios
      - android
      - web
      type: string
      description: |-
        * `ios` - ios
        * `android` - android
        * `web` - web
    PatchedFCMDevice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
        registration_id:
          type: string
          title: Registration token
        device_id:
          type: string
          nullable: true
          description: Unique device identifier
          maxLength: 255
        active:
          type: boolean
          default: true
          title: Is active
          description: Inactive devices will not be sent notifications
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Creation date
        type:
          $ref: '#/components/schemas/FCMDeviceTypeEnum'
    Path:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_location_place_id:
          type: string
          readOnly: true
        start_location_name:
          type: string
          readOnly: true
        start_coords:
          type: string
          readOnly: true
        end_location_place_id:
          type: string
          readOnly: true
        end_location_name:
          type: string
          readOnly: true
        end_coords:
          type: string
          readOnly: true
      required:
      - end_coords
      - end_location_name
      - end_location_place_id
      - id
      - start_coords
      - start_location_name
      - start_location_place_id
    Prompt:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question_name:
          type: string
          readOnly: true
        question_placeholder:
          type: string
          readOnly: true
          nullable: true
      required:
      - id
      - question_name
      - question_placeholder
    Request:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        approvee:
          $ref: '#/components/schemas/User'
        approver:
          $ref: '#/components/schemas/User'
        ride:
          $ref: '#/components/schemas/SimpleRide'
        approved:
          type: boolean
          readOnly: true
          nullable: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - approved
      - approvee
      - approver
      - id
      - ride
      - timestamp
    Ride:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creator:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        max_travelers:
          type: integer
          readOnly: true
        min_travelers:
          type: integer
          readOnly: true
        departure_datetime:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
          readOnly: true
          nullable: true
        driver:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_flexible:
          type: boolean
          readOnly: true
        riders:
          type: string
          readOnly: true
        estimated_cost:
          type: number
          format: double
          readOnly: true
          nullable: true
        path:
          $ref: '#/components/schemas/Path'
        type:
          allOf:
          - $ref: '#/components/schemas/Type22aEnum'
          readOnly: true
      required:
      - creator
      - departure_datetime
      - description
      - driver
      - estimated_cost
      - id
      - is_flexible
      - max_travelers
      - min_travelers
      - path
      - riders
      - type
    SimplePerson:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        netid:
          type: string
          readOnly: true
        first_name:
          type: string
        last_name:
          type: string
        profile_pic_url:
          type: string
          readOnly: true
          nullable: true
        grade:
          type: string
          readOnly: true
          nullable: true
        pronouns:
          type: string
          readOnly: true
          nullable: true
        prompts:
          type: string
          readOnly: true
      required:
      - first_name
      - grade
      - id
      - last_name
      - netid
      - profile_pic_url
      - prompts
      - pronouns
    SimpleRide:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          readOnly: true
          nullable: true
        departure_datetime:
          type: string
          format: date-time
          readOnly: true
        driver:
          $ref: '#/components/schemas/SimplePerson'
        min_travelers:
          type: integer
          readOnly: true
        max_travelers:
          type: integer
          readOnly: true
        path:
          $ref: '#/components/schemas/Path'
        type:
          allOf:
          - $ref: '#/components/schemas/Type22aEnum'
          readOnly: true
      required:
      - departure_datetime
      - description
      - driver
      - id
      - max_travelers
      - min_travelers
      - path
      - type
    Type22aEnum:
      enum:
      - rideshare
      - studentdriver
      type: string
      description: |-
        * `rideshare` - Rideshare
        * `studentdriver` - Student Driver
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        netid:
          type: string
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        phone_number:
          type: string
        grade:
          type: string
        profile_pic_url:
          type: string
        pronouns:
          type: string
        prompts:
          type: string
          readOnly: true
        rides:
          type: string
          readOnly: true
      required:
      - first_name
      - grade
      - id
      - last_name
      - netid
      - phone_number
      - profile_pic_url
      - prompts
      - pronouns
      - rides
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
